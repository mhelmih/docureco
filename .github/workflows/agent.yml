name: Docureco AI Agent

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [closed]  # For baseline map updates when PR is merged
  workflow_dispatch:  # Manual trigger for baseline map creation
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'analyze_pr'
        type: choice
        options:
        - analyze_pr
        - create_baseline_map
        - update_baseline_map
      repository:
        description: 'Repository to process (owner/repo)'
        required: false
        type: string
      branch:
        description: 'Branch to process'
        required: false
        default: 'main'
        type: string

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  # Main PR Analysis Job (Document Update Recommendator)
  analyze:
    if: >
      github.event_name == 'pull_request' || 
      (github.event_name == 'workflow_dispatch' && inputs.action == 'analyze_pr')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('agent/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r agent/requirements.txt

      - name: Validate environment variables
        run: |
          echo "Checking required environment variables..."
          if [ -z "${{ secrets.GROK_API_KEY }}" ]; then
            echo "Warning: GROK_API_KEY not set, will try OpenAI fallback"
          fi
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "Warning: OPENAI_API_KEY not set"
          fi
          if [ -z "${{ secrets.DATABASE_URL }}" ]; then
            echo "Warning: DATABASE_URL not set, traceability map features will be limited"
          fi

      - name: Run Docureco agent (PR Analysis)
        env:
          # GitHub context (automatically set)
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          # LLM Configuration
          DOCURECO_LLM_PROVIDER: ${{ vars.DOCURECO_LLM_PROVIDER || 'grok' }}
          DOCURECO_LLM_MODEL: ${{ vars.DOCURECO_LLM_MODEL || 'grok-3-mini-reasoning-high' }}
          GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
          GROK_BASE_URL: ${{ vars.GROK_BASE_URL || 'https://api.x.ai/v1' }}
          
          # OpenAI Fallback
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: ${{ vars.OPENAI_BASE_URL }}
          
          # LLM Parameters (optional)
          DOCURECO_LLM_TEMPERATURE: ${{ vars.DOCURECO_LLM_TEMPERATURE || '0.1' }}
          DOCURECO_LLM_MAX_TOKENS: ${{ vars.DOCURECO_LLM_MAX_TOKENS || '4000' }}
          DOCURECO_LLM_MAX_RETRIES: ${{ vars.DOCURECO_LLM_MAX_RETRIES || '3' }}
          DOCURECO_LLM_TIMEOUT: ${{ vars.DOCURECO_LLM_TIMEOUT || '120' }}
          
          # Database Configuration
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          
          # Logging and Performance
          LOG_LEVEL: ${{ vars.LOG_LEVEL || 'INFO' }}
          MAX_CONCURRENT_OPERATIONS: ${{ vars.MAX_CONCURRENT_OPERATIONS || '5' }}
          REQUEST_TIMEOUT_SECONDS: ${{ vars.REQUEST_TIMEOUT_SECONDS || '120' }}
          MAX_FILE_SIZE_MB: ${{ vars.MAX_FILE_SIZE_MB || '10' }}
          
        run: |
          cd agent
          python -m main
        timeout-minutes: 10

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: docureco-analyze-logs-${{ github.run_id }}
          path: |
            agent/*.log
            /tmp/docureco*.log
          retention-days: 7

  # Baseline Map Creation Job (Initial Baseline Map Creator)
  create-baseline-map:
    if: >
      github.event_name == 'workflow_dispatch' && inputs.action == 'create_baseline_map'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch || 'main' }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r agent/requirements.txt

      - name: Create baseline traceability map
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          TARGET_REPOSITORY: ${{ inputs.repository || github.repository }}
          TARGET_BRANCH: ${{ inputs.branch || 'main' }}
          LOG_LEVEL: ${{ vars.LOG_LEVEL || 'INFO' }}
        run: |
          cd agent
          python -m baseline_map_creator
        timeout-minutes: 30

      - name: Upload baseline map creation logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docureco-baseline-creation-logs-${{ github.run_id }}
          path: |
            agent/*.log
            /tmp/docureco*.log
          retention-days: 7

  # Baseline Map Update Job (Baseline Map Updater)
  update-baseline-map:
    if: >
      (github.event_name == 'pull_request_target' && github.event.pull_request.merged == true) ||
      (github.event_name == 'workflow_dispatch' && inputs.action == 'update_baseline_map')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout merged code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.ref || inputs.branch || 'main' }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r agent/requirements.txt

      - name: Update baseline traceability map
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          TARGET_REPOSITORY: ${{ inputs.repository || github.repository }}
          TARGET_BRANCH: ${{ github.event.pull_request.base.ref || inputs.branch || 'main' }}
          MERGED_PR_NUMBER: ${{ github.event.pull_request.number }}
          LOG_LEVEL: ${{ vars.LOG_LEVEL || 'INFO' }}
        run: |
          cd agent
          python -m baseline_map_updater
        timeout-minutes: 20

      - name: Upload baseline map update logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docureco-baseline-update-logs-${{ github.run_id }}
          path: |
            agent/*.log
            /tmp/docureco*.log
          retention-days: 7

      - name: Comment on merged PR
        if: github.event_name == 'pull_request_target' && github.event.pull_request.merged == true
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.pull_request.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üó∫Ô∏è **Baseline Traceability Map Updated**\n\nThe baseline traceability map has been automatically updated to reflect the changes from this merged pull request.\n\n_Generated by Docureco Agent ÔøΩÔøΩ_'
            })
