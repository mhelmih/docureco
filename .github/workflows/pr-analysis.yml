name: 'Docureco Agent: PR Analysis'

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [closed]  # Triggers on both merged and closed without merge
    branches: [main, develop]  # Only for main branches
  workflow_dispatch:  # Manual trigger for PR analysis
    inputs:
      pr_number:
        description: 'PR number (for manual analysis)'
        required: true
        type: string
      repository:
        description: 'Repository name (owner/repo)'
        required: false
        default: 'auto'

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  analyze:
    if: >
      github.event_name == 'pull_request' || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.pr_number)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Node.js (for Repomix)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('agent/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-repomix
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r agent/requirements.txt

      - name: Install Repomix
        run: |
          npm install -g repomix
          repomix --version

      - name: Validate environment variables
        run: |
          echo "Checking required environment variables..."
          if [ -z "${{ secrets.GROK_API_KEY }}" ]; then
            echo "Warning: GROK_API_KEY not set, will try OpenAI fallback"
          fi
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "Warning: OPENAI_API_KEY not set"
          fi
          if [ -z "${{ secrets.SUPABASE_URL }}" ]; then
            echo "Warning: SUPABASE_URL not set, traceability map features will be limited"
          fi

      - name: Determine PR URL and repository info
        id: pr_info
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ "${{ github.event.inputs.repository }}" = "auto" ]; then
              REPO="${{ github.repository }}"
            else
              REPO="${{ github.event.inputs.repository }}"
            fi
            PR_URL="https://github.com/${REPO}/pull/${{ github.event.inputs.pr_number }}"
            echo "pr_url=${PR_URL}" >> $GITHUB_OUTPUT
            echo "repository=${REPO}" >> $GITHUB_OUTPUT
            echo "pr_number=${{ github.event.inputs.pr_number }}" >> $GITHUB_OUTPUT
          else
            PR_URL="https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"
            echo "pr_url=${PR_URL}" >> $GITHUB_OUTPUT
            echo "repository=${{ github.repository }}" >> $GITHUB_OUTPUT
            echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          fi
          echo "Generated PR URL: ${PR_URL}"

      - name: Run Document Update Recommender
        env:
          # LLM Configuration
          GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
          GROK_BASE_URL: ${{ secrets.GROK_BASE_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: ${{ vars.OPENAI_BASE_URL }}
          
          # LangSmith Configuration
          LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
          
          # Database Configuration
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          
          # GitHub Configuration
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          # Logging
          LOG_LEVEL: ${{ vars.LOG_LEVEL || 'INFO' }}
          
        run: |
          python -m agent.document_update_recommender.main \
            "${{ steps.pr_info.outputs.pr_url }}" \
            --format json \
            --output recommendations.json \
            --log-level ${{ vars.LOG_LEVEL || 'INFO' }}
        timeout-minutes: 15

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: docureco-analyze-logs-pr-${{ steps.pr_info.outputs.pr_number }}
          path: |
            agent/*.log
            /tmp/docureco*.log
          retention-days: 7

  # Baseline Map Update Job (Baseline Map Updater)
  # update-baseline-map:
  #   if: >
  #     (github.event_name == 'pull_request_target' && github.event.pull_request.merged == true)
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Validate PR merge status
  #       run: |
  #         echo "Checking if PR was actually merged..."
  #         if [ "${{ github.event.pull_request.merged }}" != "true" ]; then
  #           echo "‚ùå PR was closed without merging. Skipping baseline map update."
  #           echo "PR #${{ github.event.pull_request.number }} status: closed (not merged)"
  #           exit 78  # Exit code for neutral (not failure)
  #         else
  #           echo "‚úÖ PR #${{ github.event.pull_request.number }} was successfully merged"
  #           echo "Target branch: ${{ github.event.pull_request.base.ref }}"
  #           echo "Merged commit: ${{ github.event.pull_request.merge_commit_sha }}"
  #         fi

  #     - name: Checkout merged code
  #       uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.event.pull_request.base.ref }}

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.11'

  #     - name: Set up Node.js (for Repomix)
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'

  #     - name: Install Repomix
  #       run: |
  #         npm install -g repomix
  #         repomix --version

  #     - name: Install Python dependencies
  #       run: |
  #         pip install --upgrade pip
  #         pip install -r agent/requirements.txt

  #     - name: Update baseline traceability map
  #       env:
  #         GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
  #         OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  #         LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
  #         SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  #         SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
  #         SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         LOG_LEVEL: ${{ vars.LOG_LEVEL || 'INFO' }}
  #       run: |
  #         python -m agent baseline-map-updater \
  #           ${{ github.repository }} \
  #           --branch ${{ github.event.pull_request.base.ref }} \
  #           --since ${{ github.event.pull_request.merge_commit_sha }}~1 \
  #           --log-level ${{ vars.LOG_LEVEL || 'INFO' }}
  #       timeout-minutes: 20

  #     - name: Upload baseline map update logs
  #       if: always()
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: docureco-baseline-update-logs-pr-${{ github.event.pull_request.number }}
  #         path: |
  #           agent/*.log
  #           /tmp/docureco*.log
  #         retention-days: 7

  #     - name: Comment on merged PR
  #       if: success()
  #       uses: actions/github-script@v7
  #       with:
  #         script: |
  #           const mergedAt = '${{ github.event.pull_request.merged_at }}';
  #           const baseBranch = '${{ github.event.pull_request.base.ref }}';
  #           const headBranch = '${{ github.event.pull_request.head.ref }}';
            
  #           github.rest.issues.createComment({
  #             issue_number: ${{ github.event.pull_request.number }},
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             body: `üó∫Ô∏è **Baseline Traceability Map Updated**\n\nThe baseline traceability map for branch \`${baseBranch}\` has been automatically updated to reflect the changes from this merged pull request.\n\n**Merge Details:**\n- **From:** \`${headBranch}\` ‚Üí \`${baseBranch}\`\n- **Merged at:** ${mergedAt}\n- **Workflow run:** [View logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\nThe updated baseline map will be used for future PR analysis and documentation recommendations.\n\n*Generated by Docureco Agent ü§ñ*`
  #           })
