name: 'Docureco Agent: Baseline Map'

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Repository name (owner/repo)'
        required: true
        default: 'mhelmih/docureco'
      branch:
        description: 'Branch name to analyze'
        required: true
        default: 'main'
      force_recreate:
        description: 'Force recreate if baseline map exists'
        required: false
        default: false
        type: boolean

env:
  # LLM Configuration
  GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
  GROK_BASE_URL: ${{ secrets.GROK_BASE_URL }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  
  # Database Configuration
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
  
  # GitHub Configuration
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create-baseline-map:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: 'agent/requirements.txt'
    
    - name: Set up Node.js (for Repomix)
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Repomix
      run: |
        npm install -g repomix
        repomix --version
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('agent/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install -r agent/requirements.txt
    
    - name: Validate inputs
      run: |
        echo "Repository: ${{ github.event.inputs.repository }}"
        echo "Branch: ${{ github.event.inputs.branch }}"
        echo "Force recreate: ${{ github.event.inputs.force_recreate }}"
        
        # Validate repository format
        if [[ ! "${{ github.event.inputs.repository }}" =~ ^[a-zA-Z0-9_.-]+/[a-zA-Z0-9_.-]+$ ]]; then
          echo "Error: Repository must be in format 'owner/repo'"
          exit 1
        fi
    
    - name: Create baseline traceability map
      env:
        REPOSITORY: ${{ github.event.inputs.repository }}
        BRANCH: ${{ github.event.inputs.branch }}
        FORCE_RECREATE: ${{ github.event.inputs.force_recreate == 'true' && 'true' || 'false' }}
        LOG_LEVEL: 'DEBUG'
      run: |
        python -u agent/baseline_map_creator.py
    
    - name: Upload baseline map artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: baseline-map-${{ github.event.inputs.repository }}-${{ github.event.inputs.branch }}
        path: |
          agent/logs/
          agent/output/
        retention-days: 30
    
    - name: Create summary
      if: always()
      run: |
        echo "## ðŸ“Š Baseline Map Creation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Repository:** \`${{ github.event.inputs.repository }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** \`${{ github.event.inputs.branch }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Force Recreate:** \`${{ github.event.inputs.force_recreate }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ”— Workflow Details" >> $GITHUB_STEP_SUMMARY
        echo "- Started by: @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- Workflow: ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
        echo "- Run ID: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY 